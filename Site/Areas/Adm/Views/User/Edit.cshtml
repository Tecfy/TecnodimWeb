@model Model.In.UserEditIn

@{
    ViewBag.Title = @i18n.Resource.EditUser;
    ViewBag.head = @i18n.Resource.EditUser;
}

@section headerScript{
    <script type="text/javascript">
        var newPassword = @(Model.NewPassword ? 1 : 0);

        $(function () {
            $("#RoleId").val("@(Model.RoleId)");
             DisplayPassword(newPassword);
        });

        function DisplayPassword(value) {
            if (value) {
                $('#divPassword').show();
                $('#divConfirmPassword').show();
            }
            else {
                $('#divPassword').hide();
                $('#divConfirmPassword').hide();
            }
        }

        $(function () {
             $("html").on("click", ".btnCancel", function (e) {
                 window.location = "@(Url.Action("Index", "User"))";
             });
        });

        $("html").on("click", '#NewPassword', function () {
            DisplayPassword($("#NewPassword").prop("checked"));
        });
    </script>
}

@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { id = "frmSave" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.AspNetUserId)

    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, new { @for = "RoleId" })
        @Html.DropDownListFor(mo => mo.RoleId, (SelectList)ViewBag.RoleId, "--" + @i18n.Resource.Select + "--", new { @class = "custom-select d-block w-100", data_val_required = string.Format(i18n.Resource.RequiredMessage, Html.DisplayNameFor(mo => mo.RoleId)), data_val = "true" })
        @Html.ValidationMessageFor(model => model.RoleId)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, new { @for = "FirstName" })
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = i18n.Resource.FirstName })
        @Html.ValidationMessageFor(model => model.FirstName)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, new { @for = "LastName" })
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = i18n.Resource.LastName })
        @Html.ValidationMessageFor(model => model.LastName)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, new { @for = "Email" })
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = i18n.Resource.Email })
        @Html.ValidationMessageFor(model => model.Email)
    </div>

    <div class="form-group">
        @Html.EditorFor(model => model.NewPassword, new { @class = "form-check-input" })
        @Html.LabelFor(m => m.NewPassword, new { @class = "form-check-label", @for = "NewPassword" })
        @Html.ValidationMessageFor(model => model.NewPassword)
    </div>

    <div class="form-group" id="divPassword">
        @Html.LabelFor(m => m.Password, new { @for = "Password" })
        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = i18n.Resource.Password })
        @Html.ValidationMessageFor(m => m.Password)
    </div>

    <div class="form-group" id="divConfirmPassword">
        @Html.LabelFor(m => m.ConfirmPassword, new { @for = "ConfirmPassword" })
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = i18n.Resource.Password })
        @Html.ValidationMessageFor(m => m.ConfirmPassword)
    </div>

    <div class="text-right">
        <button type="submit" class="btn btn-outline-success btnSave">@i18n.Resource.Save</button>
        <button type="button" class="btn btn-outline-dark btnCancel">@i18n.Resource.Cancel</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
