@model Model.In.CategoryEditIn

@{
    ViewBag.Title = @i18n.Resource.EditCategory;
    ViewBag.head = @i18n.Resource.EditCategory;
}

@section headerScript{
    <script type="text/javascript">
        var showIdentifierOld = @(Model.ShowIdentifier ? 1 : 0);
        var showCompetenceOld = @(Model.ShowCompetence ? 1 : 0);
        var showValidityOld = @(Model.ShowValidity ? 1 : 0);
        var showDocumentViewOld = @(Model.ShowDocumentView ? 1 : 0);

        $(function () {
            DisplayIdentifier(showIdentifierOld);
            DisplayCompetence(showCompetenceOld);
            DisplayValidity(showValidityOld);
            DisplayDocumentView(showDocumentViewOld);
        });

        function DisplayIdentifier(value) {
            if (value) {
                $('#divIdentifier').show();
            }
            else {
                $('#divIdentifier').hide();
            }
        }

        function DisplayCompetence(value) {
            if (value) {
                $('#divCompetence').show();
            }
            else {
                $('#divCompetence').hide();
            }
        }

        function DisplayValidity(value) {
            if (value) {
                $('#divValidity').show();
            }
            else {
                $('#divValidity').hide();
            }
        }

        function DisplayDocumentView(value) {
            if (value) {
                $('#divDocumentView').show();
            }
            else {
                $('#divDocumentView').hide();
            }
        }

        $(function () {
            $("html").on("click", ".btnCancel", function (e) {
                window.location = "@(Url.Action("Index", "Categories"))";
            });

            $("html").on("click", '#ShowIdentifier', function () {
                DisplayIdentifier($("#ShowIdentifier").prop("checked"));
            });

            $("html").on("click", '#ShowCompetence', function () {
                DisplayCompetence($("#ShowCompetence").prop("checked"));
            });

            $("html").on("click", '#ShowValidity', function () {
                DisplayValidity($("#ShowValidity").prop("checked"));
            });

            $("html").on("click", '#ShowDocumentView', function () {
                DisplayDocumentView($("#ShowDocumentView").prop("checked"));
            });
        });
    </script>
}

@using (Html.BeginForm("Edit", "Categories", FormMethod.Post, new { id = "frmSave" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.CategoryId)

    <div class="form-group">
        @Html.DisplayNameFor(model => model.Parent):
        @Html.DisplayFor(model => model.Parent)
    </div>

    <div class="form-group">
        @Html.DisplayNameFor(model => model.Name):
        @Html.DisplayFor(model => model.Name)
    </div>

    <div class="form-group">
        @Html.DisplayNameFor(model => model.Code):
        @Html.DisplayFor(model => model.Code)
    </div>

    <div class="form-group">
        <h5>@i18n.Resource.Identifier</h5>
        @Html.EditorFor(model => model.ShowIdentifier, new { @class = "form-check-input" })
        @Html.LabelFor(m => m.ShowIdentifier, new { @class = "form-check-label", @for = "ShowIdentifier" })
        @Html.ValidationMessageFor(model => model.ShowIdentifier)
    </div>

    <div class="form-group" id="divIdentifier">
        @Html.HiddenFor(model => model.Identifier.CategoryAdditionalFieldId)
        @Html.HiddenFor(model => model.Identifier.AdditionalFieldId)
        @Html.HiddenFor(model => model.Identifier.CategoryId)
        <div class="row">
            <div class="col-3">
                @Html.EditorFor(model => model.Identifier.Required, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.Identifier.Required, new { @class = "form-check-label", @for = "Identifier_Required" })
                @Html.ValidationMessageFor(model => model.Identifier.Required)
            </div>
            <div class="col-3">
                @Html.EditorFor(model => model.Identifier.Single, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.Identifier.Single, new { @class = "form-check-label", @for = "Identifier_Single" })
                @Html.ValidationMessageFor(model => model.Identifier.Single)
            </div>
        </div>
    </div>

    <div class="form-group">
        <h5>@i18n.Resource.Competence</h5>
        @Html.EditorFor(model => model.ShowCompetence, new { @class = "form-check-input" })
        @Html.LabelFor(m => m.ShowCompetence, new { @class = "form-check-label", @for = "ShowCompetence" })
        @Html.ValidationMessageFor(model => model.ShowCompetence)
    </div>

    <div class="form-group" id="divCompetence">
        @Html.HiddenFor(model => model.Competence.CategoryAdditionalFieldId)
        @Html.HiddenFor(model => model.Competence.AdditionalFieldId)
        @Html.HiddenFor(model => model.Competence.CategoryId)
        <div class="row">
            <div class="col-3">
                @Html.EditorFor(model => model.Competence.Required, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.Competence.Required, new { @class = "form-check-label", @for = "Competence_Required" })
                @Html.ValidationMessageFor(model => model.Competence.Required)
            </div>
            <div class="col-3">
                @Html.EditorFor(model => model.Competence.Single, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.Competence.Single, new { @class = "form-check-label", @for = "Competence_Single" })
                @Html.ValidationMessageFor(model => model.Competence.Single)
            </div>
        </div>
    </div>

    <div class="form-group">
        <h5>@i18n.Resource.Validity</h5>
        @Html.EditorFor(model => model.ShowValidity, new { @class = "form-check-input" })
        @Html.LabelFor(m => m.ShowValidity, new { @class = "form-check-label", @for = "ShowValidity" })
        @Html.ValidationMessageFor(model => model.ShowValidity)
    </div>

    <div class="form-group" id="divValidity">
        @Html.HiddenFor(model => model.Validity.CategoryAdditionalFieldId)
        @Html.HiddenFor(model => model.Validity.AdditionalFieldId)
        @Html.HiddenFor(model => model.Validity.CategoryId)
        <div class="row">
            <div class="col-3">
                @Html.EditorFor(model => model.Validity.Required, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.Validity.Required, new { @class = "form-check-label", @for = "Competence_Required" })
                @Html.ValidationMessageFor(model => model.Validity.Required)
            </div>
            <div class="col-3">
                @Html.EditorFor(model => model.Validity.Single, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.Validity.Single, new { @class = "form-check-label", @for = "Validity_Single" })
                @Html.ValidationMessageFor(model => model.Validity.Single)
            </div>
        </div>
    </div>

    <div class="form-group">
        <h5>@i18n.Resource.DocumentView</h5>
        @Html.EditorFor(model => model.ShowDocumentView, new { @class = "form-check-input" })
        @Html.LabelFor(m => m.ShowDocumentView, new { @class = "form-check-label", @for = "ShowDocumentView" })
        @Html.ValidationMessageFor(model => model.ShowDocumentView)
    </div>

    <div class="form-group" id="divDocumentView">
        @Html.HiddenFor(model => model.DocumentView.CategoryAdditionalFieldId)
        @Html.HiddenFor(model => model.DocumentView.AdditionalFieldId)
        @Html.HiddenFor(model => model.DocumentView.CategoryId)
        <div class="row">
            <div class="col-3">
                @Html.EditorFor(model => model.DocumentView.Required, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.DocumentView.Required, new { @class = "form-check-label", @for = "DocumentView_Required" })
                @Html.ValidationMessageFor(model => model.DocumentView.Required)
            </div>
            <div class="col-3">
                @Html.EditorFor(model => model.DocumentView.Single, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.DocumentView.Single, new { @class = "form-check-label", @for = "DocumentView_Single" })
                @Html.ValidationMessageFor(model => model.DocumentView.Single)
            </div>
        </div>
    </div>

    <div class="text-right">
        <button type="submit" class="btn btn-outline-success btnSave">@i18n.Resource.Save</button>
        <button type="button" class="btn btn-outline-dark btnCancel">@i18n.Resource.Cancel</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
