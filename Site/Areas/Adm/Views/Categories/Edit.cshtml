@model Model.In.CategoryEditIn

@{
    ViewBag.Title = @i18n.Resource.EditCategory;
    ViewBag.head = @i18n.Resource.EditCategory;
}

@section headerScript{
    <script type="text/javascript">
        $(function () {
            $("#ParentId").val("@(Model.ParentId)");
        });

        $(function () {
            $("html").on("click", ".btnCancel", function (e) {
                window.location = "@(Url.Action("Index", "Categories"))";
            });
        });
    </script>
}

@using (Html.BeginForm("Edit", "Categories", FormMethod.Post, new { id = "frmSave" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.CategoryId)
    @Html.HiddenFor(model => model.ParentId)
    @Html.HiddenFor(model => model.ExternalId)

    <div class="form-group">
        @Html.LabelFor(model => model.ParentId, new { @for = "ParentId" })
        @Html.DropDownListFor(mo => mo.ParentId, (SelectList)ViewBag.ParentsId, "--" + @i18n.Resource.Select + "--", new { @class = "custom-select d-block w-100", data_val_required = string.Format(i18n.Resource.RequiredMessage, Html.DisplayNameFor(mo => mo.ParentId)), data_val = "true" })
        @Html.ValidationMessageFor(model => model.ParentId)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Code, new { @for = "Code" })
        @Html.TextBoxFor(m => m.Code, new { @class = "form-control", @placeholder = i18n.Resource.Code })
        @Html.ValidationMessageFor(model => model.Code)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, new { @for = "Name" })
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = i18n.Resource.Name })
        @Html.ValidationMessageFor(model => model.Name)
    </div>

    <div class="text-right">
        <button type="submit" class="btn btn-outline-success btnSave">@i18n.Resource.Save</button>
        <button type="button" class="btn btn-outline-dark btnCancel">@i18n.Resource.Cancel</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
